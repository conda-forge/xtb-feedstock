diff --git a/src/disp/dftd3.f90 b/src/disp/dftd3.f90
index 0a1b584..192d4cf 100644
--- a/src/disp/dftd3.f90
+++ b/src/disp/dftd3.f90
@@ -290,7 +290,7 @@ subroutine disp_gradient_latp &
    real(wp) :: dE, dG(3), dS(3, 3), disp, ddisp
 
    cutoff2 = cutoff**2
-   !$omp parallel do default(none) &
+   !$omp parallel do default(shared) &
    !$omp reduction(+:energies, gradient, sigma, dEdcn) &
    !$omp shared(mol, trans, cutoff2, par, r4r2, c6, dc6dcn) &
    !$omp private(iat, jat, itr, ati, atj, r2, rij, r4r2ij, r0, t6, t8, t10, &
@@ -614,7 +614,7 @@ subroutine disp_gradient_neigh &
    real(wp) :: r4r2ij, r0, rij(3), r2, t6, t8, t10, d6, d8, d10
    real(wp) :: dE, dG(3), dS(3, 3), disp, ddisp
 
-   !$omp parallel do default(none) &
+   !$omp parallel do default(shared) &
    !$omp reduction(+:energies, gradient, sigma, dEdcn) &
    !$omp shared(mol, neighs, neighlist, par, r4r2, c6, dc6dcn) &
    !$omp private(ij, img, jat, ati, atj, r2, rij, r4r2ij, r0, t6, t8, t10, &
diff --git a/src/disp/dftd4.f90 b/src/disp/dftd4.f90
index 1d2fecb..aac331b 100644
--- a/src/disp/dftd4.f90
+++ b/src/disp/dftd4.f90
@@ -90,7 +90,7 @@ subroutine d3init(nat,at)
    enddo
 
    ! integrate C6 coefficients
-   !$omp parallel default(none) private(i,j,ii,jj,ij,alpha,c6) shared(dispm)
+   !$omp parallel default(shared) private(i,j,ii,jj,ij,alpha,c6) shared(dispm)
    !$omp do schedule(runtime)
    do i = 1, 86
       do j = 1, i
@@ -1075,7 +1075,7 @@ subroutine dispgrad(nat,ndim,at,q,xyz, &
    enddo
 
 !  print'(" * Entering first OMP section")'
-!$OMP parallel default(none) &
+!$OMP parallel default(shared) &
 !$omp private(i,ii,iii,ia,iz,k,norm,dnorm,twf,tgw,dexpw,expw,gwk,dgwk)  &
 !$omp shared (nat,at,dispm,itbl,wf,cn,g_a,g_c,q) &
 !$omp shared (gw,dgw,zvec,dzvec,dzdq)
@@ -1132,7 +1132,7 @@ subroutine dispgrad(nat,ndim,at,q,xyz, &
 !$omp end parallel
 
 !  print'(" * Entering second OMP section")'
-!$OMP parallel default(none) &
+!$OMP parallel default(shared) &
 !$omp private(i,j,ia,ja,ij,k,l,c6ij,dic6ij,djc6ij,disp,dizij,djzij,  &
 !$omp         rij,r2,r,r4r2ij,r0,oor6,oor8,oor10,door6,door8,door10)  &
 !$omp shared(nat,at,xyz,dispm,itbl,zvec,dzvec,c6abns,par,dzdq) &
@@ -1224,7 +1224,7 @@ subroutine dispgrad(nat,ndim,at,q,xyz, &
 !  end select
 
 !  print'(" * Entering third OMP section")'
-!$OMP parallel default(none) &
+!$OMP parallel default(shared) &
 !$omp private(i,j,ia,ja,ij,rij,r2,r,drdx,den,rcovij,  &
 !$omp         expterm,dcndr,dtmp) reduction(+:g) &
 !$omp shared(nat,at,xyz,dc6dr,dc6dcn)
@@ -1577,7 +1577,7 @@ subroutine dabcappr(nat,ndim,at,xyz,par,  &
 
    eabc = 0.0_wp
 
-!$OMP parallel default(none) &
+!$OMP parallel default(shared) &
 !$omp private(i,ia,j,ja,ij,r2ij,c6ij,dic6ij,djc6ij,k,l)  &
 !$omp shared (nat,at,r2ab,dispm,itbl,c6abns,zvec,dzvec) &
 !$omp shared (c6ab,dc6ab)
@@ -1616,7 +1616,7 @@ subroutine dabcappr(nat,ndim,at,xyz,par,  &
 !$omp enddo
 !$omp end parallel
 
-!$OMP parallel default(none) &
+!$OMP parallel default(shared) &
 !$omp private(i,j,ij,ia,ja,k,ka,ik,jk,oorjk,oorik,atm,fdmp,  &
 !$omp         r2ij,cij,oorij,r2ik,r2jk,cik,cjk,r2ijk,rijk,cijk, &
 !$omp         dijatm,djkatm,dikatm,dtmp,dijfdmp,djkfdmp,dikfdmp,  &
@@ -2442,7 +2442,7 @@ subroutine edisp_3d(mol,ndim,q,rep,atm_rep,r_thr,atm_thr,par,g_a,g_c,gw,refc6,mb
    enddo
 
 !  print'(" * Entering first OMP section")'
-!$OMP parallel default(none) &
+!$OMP parallel default(shared) &
 !$omp private(i,ii,iii,ia,iz,k)  &
 !$omp shared (mol,dispm,itbl,g_a,g_c,q) &
 !$omp shared (gw,zetavec,zerovec,r_thr)
@@ -2461,7 +2461,7 @@ subroutine edisp_3d(mol,ndim,q,rep,atm_rep,r_thr,atm_thr,par,g_a,g_c,gw,refc6,mb
 !$omp end do
 !$omp end parallel
 
-!$OMP parallel default(none) &
+!$OMP parallel default(shared) &
 !$omp private(i,j,ia,ja,ij,k,l,c6ii,c6ij,disp,  &
 !$omp         rij,r2,r,r4r2ij,r0,oor6,oor8,oor10, &
 !$omp         t,tx,ty,tz)  &
@@ -2574,7 +2574,7 @@ subroutine abcappr_3d(mol,ndim,par,zvec,refc6,itbl,rep,r_thr,eabc)
 
    eabc = 0.0_wp
 
-   !$OMP parallel default(none) &
+   !$OMP parallel default(shared) &
    !$omp private(i,ia,j,ja,ij,r2ij,c6ij,k,l,r)  &
    !$omp shared (mol,dispm,itbl,refc6,zvec) &
    !$omp shared (c6ab)
@@ -3058,7 +3058,7 @@ subroutine dispgrad_3d(mol,ndim,q,cn,dcndr,dcndL,rep,atm_rep,r_thr,atm_thr,par,
    call weight_references(mol%n, mol%at, g_a, g_c, wf, q, cn, &
       &                   zvec, gw, dzvec, dgw, dzdq)
 
-!$OMP parallel default(none) &
+!$OMP parallel default(shared) &
 !$omp private(i,j,ia,ja,ij,k,l,c6ii,c6ij,dic6ii,dic6ij,djc6ij,disp,ddisp,dizii,dizij,djzij,  &
 !$omp         rij,r2,r,r4r2ij,r0,oor6,oor8,oor10,door6,door8,door10, &
 !$omp         t,tx,ty,tz,dtmp,drdx)  &
@@ -3254,7 +3254,7 @@ subroutine dabcappr_3d(mol,ndim,par,zvec,dzvec,refc6,itbl,rep,r_thr, &
 
    eabc = 0.0_wp
 
-!$OMP parallel default(none) &
+!$OMP parallel default(shared) &
 !$omp private(i,ia,j,ja,ij,r2ij,c6ij,dic6ij,djc6ij,k,l,r)  &
 !$omp shared (mol,dispm,itbl,refc6,zvec,dzvec) &
 !$omp shared (c6ab,dc6ab)
@@ -3366,7 +3366,7 @@ subroutine dabcappr_3d_dftd3_like_style(nat,at,xyz,par,thr,rep,dlat,c6ab,dc6ab,
    eabc=0.0_wp
    !        write(*,*)'thr:',sqrt(thr)
 
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp shared(nat,xyz,c6ab,rep,par,at,dlat,dc6ab,thr) &
 !$omp private(iat,jat,ij,ijvec,c6ij,kat,ik,jk,ikvec,jkvec,c6ik,c6jk,c9, &
 !$omp&        cij,cik,cjk,cijk,tx,ty,tz,repmin,repmax,t,rij2,sx,sy,sz, &
@@ -4269,7 +4269,7 @@ subroutine disp_gradient_neigh &
    real(wp) :: r4r2ij, r0, rij(3), r2, t6, t8, t10, d6, d8, d10
    real(wp) :: dE, dG(3), dS(3, 3), disp, ddisp
 
-   !$omp parallel do default(none) &
+   !$omp parallel do default(shared) &
    !$omp reduction(+:energies, gradient, sigma, dEdcn, dEdq) &
    !$omp shared(mol, neighs, neighlist, par, r4r2, c6, dc6dcn, dc6dq) &
    !$omp private(ij, img, jat, ati, atj, r2, rij, r4r2ij, r0, t6, t8, t10, &
@@ -4727,7 +4727,7 @@ subroutine disp_gradient_latp &
    real(wp) :: dE, dG(3), dS(3, 3), disp, ddisp
 
    cutoff2 = cutoff**2
-   !$omp parallel do default(none) &
+   !$omp parallel do default(shared) &
    !$omp reduction(+:energies, gradient, sigma, dEdcn, dEdq) &
    !$omp shared(mol, trans, cutoff2, par, r4r2, c6, dc6dcn, dc6dq) &
    !$omp private(iat, jat, itr, ati, atj, r2, rij, r4r2ij, r0, t6, t8, t10, &
diff --git a/src/eeq_model.f90 b/src/eeq_model.f90
index e93adc1..15a7b35 100644
--- a/src/eeq_model.f90
+++ b/src/eeq_model.f90
@@ -63,7 +63,7 @@ subroutine get_coulomb_matrix_0d(mol, chrgeq, amat)
    integer :: iat, jat
    real(wp) :: r1, gamij
    Amat = 0.0_wp
-   !$omp parallel do default(none) schedule(runtime) shared(mol,chrgeq, amat) &
+   !$omp parallel do default(shared) schedule(runtime) shared(mol,chrgeq, amat) &
    !$omp private(jat, r1, gamij)
    do iat = 1, len(mol)
       ! EN of atom i
@@ -94,7 +94,7 @@ subroutine get_coulomb_matrix_3d(mol, chrgeq, rTrans, gTrans, cf, amat)
    real(wp) :: gamii, gamij, riw(3), gVec(3)
 
    amat = 0.0_wp
-   !$omp parallel do default(none) schedule(runtime) reduction(+:amat) &
+   !$omp parallel do default(shared) schedule(runtime) reduction(+:amat) &
    !$omp shared(mol, chrgeq, cf, gTrans, rTrans) &
    !$omp private(iat, jat, wscAt, gamii, gamij, riw)
    do iat = 1, len(mol)
@@ -135,7 +135,7 @@ subroutine get_coulomb_derivs_0d(mol, chrgeq, qvec, amatdr, atrace)
    real(wp) :: dE, dG(3)
    amatdr = 0.0_wp
    atrace = 0.0_wp
-   !$omp parallel do default(none) schedule(runtime) reduction(+:atrace, amatdr) &
+   !$omp parallel do default(shared) schedule(runtime) reduction(+:atrace, amatdr) &
    !$omp shared(mol,chrgeq, qvec) private(jat, rij, r2, gamij2, arg2, dE, dG)
    do iat = 1, len(mol)
       ! EN of atom i
@@ -181,7 +181,7 @@ subroutine get_coulomb_derivs_3d(mol, chrgeq, qvec, rTrans, gTrans, cf, &
    amatdr = 0.0_wp
    amatdL = 0.0_wp
    atrace = 0.0_wp
-   !$omp parallel do default(none) schedule(runtime) &
+   !$omp parallel do default(shared) schedule(runtime) &
    !$omp reduction(+:atrace,amatdr,amatdL) &
    !$omp shared(mol, chrgeq, qvec, cf, gTrans, rTrans) &
    !$omp private(iat, jat, ii, wscAt, riw, gamij, dG, dS)
@@ -421,7 +421,7 @@ subroutine goedecker_chrgeq(n,at,xyz,chrg,cn,dcndr,q,dqdr,energy,gradient,&
    if (lverbose) write(istdout,'(72("="),/,1x,a)') &
       "Setup of the A matrix and the RHS X vector"
 !  prepare some arrays
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp shared(n,at,cn,xi,cnfak,alp,gamm) &
 !$omp private(i,tmp) &
 !$omp shared(Xvec,Xfac,alpha)
@@ -435,7 +435,7 @@ subroutine goedecker_chrgeq(n,at,xyz,chrg,cn,dcndr,q,dqdr,energy,gradient,&
 !$omp enddo
 !$omp endparallel
 
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp shared(n,at,xyz,gamm,alpha) &
 !$omp private(i,j,r,gamij) &
 !$omp shared(Xvec,Xfac,Amat)
@@ -519,7 +519,7 @@ do_molecular_gradient: if (lgrad .or. lcpq) then
       "molecular gradient calculation"
    allocate( dAmat(3,n,m), dXvec(3,n,m), Afac(3,n), source = 0.0_wp )
    !allocate( dAmat(3,n,m), Afac(3,n), source = 0.0_wp )
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp shared(n,dcndr,xyz,alpha,Amat,Xfac,Xtmp) &
 !$omp private(i,j,rij,r2,gamij,arg,dtmp) &
 !$omp shared(dXvec,dAmat) &
@@ -776,7 +776,7 @@ subroutine eeq_chrgeq_core(mol,env,chrgeq,cn,dcndr,dcndL,q,dqdr,dqdL, &
       "Setup of the A matrix and the RHS X vector"
 
    ! prepare some arrays
-   !$omp parallel do default(none) schedule(runtime) &
+   !$omp parallel do default(shared) schedule(runtime) &
    !$omp shared(mol,cn,chrgeq) private(i,tmp) shared(Xvec,Xfac)
    do i = 1, mol%n
       tmp = chrgeq%kappa(i)/(sqrt(cn(i))+1e-14_wp)
@@ -1120,7 +1120,7 @@ subroutine eeq_chrgeq_gbsa(mol,env,chrgeq,gbsa,cn,dcndr,q,dqdr, &
       "Setup of the A matrix and the RHS X vector"
 
    ! prepare some arrays
-   !$omp parallel do default(none) schedule(runtime) &
+   !$omp parallel do default(shared) schedule(runtime) &
    !$omp shared(mol,cn,chrgeq) private(i,tmp) shared(Xvec,Xfac)
    do i = 1, mol%n
       tmp = chrgeq%kappa(i)/(sqrt(cn(i))+1e-14_wp)
diff --git a/src/gfnff/frag_hess.f90 b/src/gfnff/frag_hess.f90
index 92e5eb0..55d6360 100644
--- a/src/gfnff/frag_hess.f90
+++ b/src/gfnff/frag_hess.f90
@@ -366,7 +366,7 @@ module xtb_gfnff_fraghess
         eig_calc = 0.0e0_sp
         nat3     = 3 * nat
 
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp private(isystem,i,ii,j,jj,nat_cur,nat3_cur,mini_hess,hess_mask,eig,lwork,aux,info) &
 !$omp shared(nsystem,ev_calc,eig_calc,hess,nspinsyst,ispinsyst)
 !!$omp do schedule(static)
diff --git a/src/gfnff/gdisp0.f90 b/src/gfnff/gdisp0.f90
index b7380c2..277725c 100644
--- a/src/gfnff/gdisp0.f90
+++ b/src/gfnff/gdisp0.f90
@@ -276,7 +276,7 @@ subroutine d3_gradient(nat, at, xyz, npair, pairlist, zeta_scale, radii, weighti
    !dgwdcn = dgwdcn*zeta_scale
    call get_atomic_c6_d4(nat, at, gw, dgwdcn, c6, dc6dcn)
 
-   !$omp parallel do default(none) schedule(runtime) &
+   !$omp parallel do default(shared) schedule(runtime) &
    !$omp reduction(+:energies, gradient, sigma, dEdcn) &
    !$omp shared(nat, at, xyz, npair, pairlist, zeta_scale, radii, c6, dc6dcn) &
    !$omp private(ij, img, iat, jat, ati, atj, r2, rij, r4r2ij, r0, t6, t8, t10, &
diff --git a/src/gfnff/gfnff_eg.f90 b/src/gfnff/gfnff_eg.f90
index 544ae13..3ad4ec6 100644
--- a/src/gfnff/gfnff_eg.f90
+++ b/src/gfnff/gfnff_eg.f90
@@ -174,7 +174,7 @@ contains
 !!!!!!!!!!!!!
 
       if (pr) call timer%measure(2,'non bonded repulsion')
-      !$omp parallel do default(none) reduction(+:erep, g) &
+      !$omp parallel do default(shared) reduction(+:erep, g) &
       !$omp shared(n, at, xyz, srab, sqrab, repthr, topo, param) &
       !$omp private(iat, jat, m, ij, ati, atj, rab, r2, r3, t8, t16, t19, t26, t27)
       do iat=1,n
@@ -208,7 +208,7 @@ contains
 
       if (version == gffVersion%harmonic2020) then
       ebond=0
-      !$omp parallel do default(none) reduction(+:ebond, g) &
+      !$omp parallel do default(shared) reduction(+:ebond, g) &
       !$omp shared(topo, xyz, at) private(i, iat, jat, rab, r2, r3, rn, dum)
       do i=1,topo%nbond
          iat=topo%blist(1,i)
@@ -261,7 +261,7 @@ contains
 ! ES part
 !!!!!!!!
       if (pr) call timer%measure(6,'EEQ gradient')
-      !$omp parallel do default(none) reduction (+:g) &
+      !$omp parallel do default(shared) reduction (+:g) &
       !$omp shared(topo,n,sqrab,srab,eeqtmp,xyz,at) &
       !$omp private(i,j,k,ij,r3,r2,rab,gammij,erff,dd)
       do i=1,n
@@ -310,7 +310,7 @@ contains
       call gfnffdrab(n,at,xyz,cn,dcn,topo%nbond,topo%blist,rab0,grab0)
       deallocate(dcn)
 
-      !$omp parallel do default(none) reduction(+:g, ebond) &
+      !$omp parallel do default(shared) reduction(+:g, ebond) &
       !$omp shared(grab0, topo, param, rab0, srab, xyz, at, hb_cn, hb_dcn, n) &
       !$omp private(i, k, iat, jat, ij, rab, rij, drij, t8, dr, dum, yy, &
       !$omp& dx, dy, dz, t4, t5, t6, ati, atj)
@@ -337,7 +337,7 @@ contains
 ! bonded REP
 !!!!!!!!!!!!!!!!!!
 
-      !$omp parallel do default(none) reduction(+:erep, g) &
+      !$omp parallel do default(shared) reduction(+:erep, g) &
       !$omp shared(topo, param, at, sqrab, srab, xyz) &
       !$omp private(i, iat, jat, ij, xa, ya, za, dx, dy, dz, r2, rab, ati, atj, &
       !$omp& alpha, repab, t16, t19, t26, t27)
@@ -379,7 +379,7 @@ contains
 
       if (pr) call timer%measure(8,'bend and torsion')
       if(topo%nangl.gt.0)then
-         !$omp parallel do default(none) reduction (+:eangl, g) &
+         !$omp parallel do default(shared) reduction (+:eangl, g) &
          !$omp shared(n, at, xyz, topo, param) &
          !$omp private(m, j, i, k, etmp, g3tmp)
          do m=1,topo%nangl
@@ -400,7 +400,7 @@ contains
 !!!!!!!!!!!!!!!!!!
 
       if(topo%ntors.gt.0)then
-         !$omp parallel do default(none) reduction(+:etors, g) &
+         !$omp parallel do default(shared) reduction(+:etors, g) &
          !$omp shared(param, topo, n, at, xyz) &
          !$omp private(m, i, j, k, l, etmp, g4tmp)
          do m=1,topo%ntors
@@ -425,7 +425,7 @@ contains
 
       if (pr) call timer%measure(9,'bonded ATM')
       if(topo%nbatm.gt.0) then
-         !$omp parallel do default(none) reduction(+:ebatm, g) &
+         !$omp parallel do default(shared) reduction(+:ebatm, g) &
          !$omp shared(n, at, xyz, srab, sqrab, topo, param) &
          !$omp private(i, j, k, l, etmp, g3tmp)
          do i=1,topo%nbatm
@@ -452,7 +452,7 @@ contains
       end if
 
       if(topo%nhb1.gt.0) then
-         !$omp parallel do default(none) reduction(+:ehb, g) &
+         !$omp parallel do default(shared) reduction(+:ehb, g) &
          !$omp shared(topo, param, n, at, xyz, sqrab, srab) &
          !$omp private(i, j, k, l, etmp, g3tmp)
          do i=1,topo%nhb1
@@ -470,7 +470,7 @@ contains
 
 
       if(topo%nhb2.gt.0) then
-         !$omp parallel do default(none) reduction(+:ehb, g) &
+         !$omp parallel do default(shared) reduction(+:ehb, g) &
          !$omp shared(topo, param, n, at, xyz, sqrab, srab) &
          !$omp private(i, j, k, l, etmp, g5tmp)
          do i=1,topo%nhb2
@@ -505,7 +505,7 @@ contains
 !!!!!!!!!!!!!!!!!!
 
       if(topo%nxb.gt.0) then
-         !$omp parallel do default(none) reduction(+:exb, g) &
+         !$omp parallel do default(shared) reduction(+:exb, g) &
          !$omp shared(topo, param, n, at, xyz) private(i, j, k, l, etmp, g3tmp)
          do i=1,topo%nxb
             j=topo%hblist3(1,i)
@@ -1265,7 +1265,7 @@ contains
 
       A = 0
 !  setup A matrix
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp shared(topo,n,sqrab,r,eeqtmp,A,at) &
 !$omp private(i,j,k,ij,gammij,tmp)
 !$omp do schedule(dynamic)
diff --git a/src/gfnff/gfnff_ini.f90 b/src/gfnff/gfnff_ini.f90
index bc0cb79..eaf75ab 100644
--- a/src/gfnff/gfnff_ini.f90
+++ b/src/gfnff/gfnff_ini.f90
@@ -624,7 +624,7 @@ subroutine gfnff_ini(env,pr,makeneighbor,mol,ichrg,gen,param,topo,accuracy)
 ! get ring info (smallest ring size)
 !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
       write(env%unit,'(10x,"rings ...")')
-!$omp parallel default(none) private(i,cr,sr) shared(mol,nbm,cring,sring)
+!$omp parallel default(shared) private(i,cr,sr) shared(mol,nbm,cring,sring)
 !$omp do
       do i=1,mol%n
          call getring36(mol%n,mol%at,nbm,i,cr,sr)
diff --git a/src/model_hessian.f90 b/src/model_hessian.f90
index a93cd24..10b8990 100644
--- a/src/model_hessian.f90
+++ b/src/model_hessian.f90
@@ -1854,7 +1854,7 @@ subroutine mh_eeq(n,at,xyz,chrg,chrgeq,kq,hess)
 !  Aij = erf(γij·Rij)/Rij = 2/√π·F0(γ²ij·R²ij)
 !! ------------------------------------------------------------------------
 !  prepare some arrays
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp shared(n,at,chrgeq) &
 !$omp private(i) &
 !$omp shared(Xvec,alpha)
@@ -1866,7 +1866,7 @@ subroutine mh_eeq(n,at,xyz,chrg,chrgeq,kq,hess)
 !$omp enddo
 !$omp endparallel
 
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp shared(n,at,xyz,chrgeq,alpha) &
 !$omp private(i,j,r,gamij) &
 !$omp shared(Amat)
@@ -1928,7 +1928,7 @@ subroutine mh_eeq(n,at,xyz,chrg,chrgeq,kq,hess)
 !  ∂Aij/∂Rj = ∂Aij/∂Ri
 !! ------------------------------------------------------------------------
    allocate( dAmat(3,n,m), source = 0.0_wp )
-!$omp parallel default(none) &
+!$omp parallel default(shared) &
 !$omp shared(n,xyz,alpha,Amat,Xtmp) &
 !$omp private(i,j,rij,r2,gamij,arg,dtmp) &
 !$omp reduction(+:dAmat)
diff --git a/src/peeq_module.f90 b/src/peeq_module.f90
index d61b9f9..9c306f1 100644
--- a/src/peeq_module.f90
+++ b/src/peeq_module.f90
@@ -867,7 +867,7 @@ subroutine ccm_build_SH0(nShell, hData, selfEnergy, nat, at, basis, nbf, nao, &
    sint = 0.0_wp
    h0   = 0.0_wp
 
-   !$omp parallel default(none) &
+   !$omp parallel default(shared) &
    !$omp private(iat,jat,ij,ati,cc,ci,rab2,atj,ish,ishtyp,valaoi,valaoj, &
    !$omp&        ri,rj,icao,naoi,iptyp,jsh,jshmax,jshtyp,jcao,naoj,jptyp, &
    !$omp&        ss,saw,est,alpi,alpj,ab,iprim,jprim,ip,jp,km,shpoly, &
@@ -1060,7 +1060,7 @@ subroutine pbc_build_SH0(nShell, hData, selfEnergy, nat, at, basis, nbf, nao, &
    sint = 0.0_wp
    h0   = 0.0_wp
 
-   !$omp parallel default(none) &
+   !$omp parallel default(shared) &
    !$omp private(iat,jat,ij,ati,cc,ci,rab2,atj,ish,ishtyp,valaoi,valaoj, &
    !$omp&        ri,rj,icao,naoi,iptyp,jsh,jshmax,jshtyp,jcao,naoj,jptyp, &
    !$omp&        ss,saw,est,alpi,alpj,ab,iprim,jprim,ip,jp,km,shpoly, &
@@ -1385,7 +1385,7 @@ subroutine ccm_build_dSH0(nShell, hData, selfEnergy, dSEdcn, dSEdq, nat, basis,
    logical  :: valaoi,valaoj
    real(wp) :: g_xyz(3)
 
-   !$omp parallel default(none) &
+   !$omp parallel default(shared) &
    !$omp private(iat,jat,ixyz,ati,cc,ci,rab2,atj,ish,ishtyp,valaoi,valaoj,g_xyz, &
    !$omp&        ri,rj,icao,naoi,iptyp,jsh,jshmax,jshtyp,jcao,naoj,jptyp,rij2, &
    !$omp&        sdq,sdqg,est,alpi,alpj,ab,iprim,jprim,ip,jp,km,shpoly,dshpoly, &
@@ -1623,7 +1623,7 @@ subroutine pbc_build_dSH0(nShell, hData, selfEnergy, dSEdcn, dSEdq, nat, basis,
 
    w = 1.0_wp !/ real(product(2*latrep+1),wp)
 
-   !$omp parallel default(none) &
+   !$omp parallel default(shared) &
    !$omp private(iat,jat,ixyz,ati,cc,ci,rab2,atj,ish,ishtyp,valaoi,valaoj,g_xyz, &
    !$omp&        ri,rj,icao,naoi,iptyp,jsh,jshmax,jshtyp,jcao,naoj,jptyp,rij2, &
    !$omp&        sdq,sdqg,est,alpi,alpj,ab,iprim,jprim,ip,jp,km,shpoly,dshpoly, &
diff --git a/src/xtb/hamiltonian.f90 b/src/xtb/hamiltonian.f90
index 71e4474..b16faff 100644
--- a/src/xtb/hamiltonian.f90
+++ b/src/xtb/hamiltonian.f90
@@ -205,7 +205,7 @@ subroutine build_SDQH0(nShell, hData, nat, at, nbf, nao, xyz, trans, selfEnergy,
    ! --- Aufpunkt for moment operator
    point = 0.0_wp
 
-   !$OMP PARALLEL default(none) &
+   !$OMP PARALLEL default(shared) &
    !$omp shared(nat, xyz, at, nShell, hData, selfEnergy, caoshell, saoshell, &
    !$omp& nprim, primcount, alp, cont, intcut, trans, point) &
    !$omp PRIVATE (iat,jat,izp,ci,ra,rb,saw, &
@@ -414,7 +414,7 @@ subroutine build_dSDQH0(nShell, hData, selfEnergy, dSEdcn, intcut, nat, nao, nbf
    thr2 = intcut
    point = 0.0_wp
    ! call timing(t1,t3)
-   !$OMP PARALLEL default(none) &
+   !$OMP PARALLEL default(shared) &
    !$omp shared(nat, at, xyz, trans, nShell, hData, selfEnergy, dSEdcn, P, Pew, &
    !$omp& ves, vs, vd, vq, &
    !$omp& intcut, nprim, primcount, caoshell, saoshell, alp, cont) &
diff --git a/src/xtb/repulsion.f90 b/src/xtb/repulsion.f90
index 85e6f7c..7ee4381 100644
--- a/src/xtb/repulsion.f90
+++ b/src/xtb/repulsion.f90
@@ -73,7 +73,7 @@ subroutine repulsionEnGrad_latp(mol, repData, trans, cutoff, energy, gradient, &
    allocate(energies(len(mol)))
    energies(:) = 0.0_wp
 
-   !$omp parallel do default(none) reduction(+:energies, gradient, sigma) &
+   !$omp parallel do default(shared) reduction(+:energies, gradient, sigma) &
    !$omp shared(repData, mol, cutoff2, trans) &
    !$omp private(iat, jat, itr, iZp, jZp, r2, rij, r1, alpha, zeff, kexp, &
    !$omp& t16, t26, t27, dE, dG, dS)
@@ -152,7 +152,7 @@ subroutine repulsionEnGrad_neighs(mol, repData, neighs, neighList, energy, &
    allocate(energies(len(mol)))
    energies(:) = 0.0_wp
 
-   !$omp parallel do default(none) reduction(+:energies, gradient, sigma) &
+   !$omp parallel do default(shared) reduction(+:energies, gradient, sigma) &
    !$omp shared(repData, mol, neighs, neighList) &
    !$omp private(iat, jat, ij, img, iZp, jZp, r2, rij, r1, alpha, zeff, kexp, &
    !$omp& t16, t26, t27, dE, dG, dS)
