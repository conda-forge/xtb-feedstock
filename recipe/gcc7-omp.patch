diff --git a/meson.build b/meson.build
index 0a3d98b..1f193f2 100644
--- a/meson.build
+++ b/meson.build
@@ -97,6 +97,7 @@ xtb_common = static_library(
   '_@0@'.format(meson.project_name()),
   sources: srcs,
   include_directories: incdir,
+  dependencies: exe_deps,
   install: false,
   pic: true,
 )
diff --git a/src/disp/dftd4.f90 b/src/disp/dftd4.f90
index ec043ac..f5203c9 100644
--- a/src/disp/dftd4.f90
+++ b/src/disp/dftd4.f90
@@ -924,8 +924,8 @@ subroutine weight_references(dispm, nat, atoms, g_a, g_c, wf, q, cn, &
    zerodcn = 0.0_wp
    zetadq  = 0.0_wp
 
-   !$omp parallel do default(none) shared(zetavec, zetadcn, zetadq, zerodcn) &
-   !$omp shared(nat, atoms, zeff, gam, dispm, cn, q) &
+   !$omp parallel do default(shared) shared(zetavec, zetadcn, zetadq, zerodcn) &
+   !$omp shared(nat, atoms, dispm, cn, q) &
    !$omp private(iat, ati, zi, gi, norm, dnorm, iref, icount, twf, gw, expw, &
    !$omp& expd, gwk, dgwk)
    do iat = 1, nat
@@ -1013,7 +1013,7 @@ subroutine get_atomic_c6(dispm, nat, atoms, zetavec, zetadcn, zetadq, &
    !$omp parallel do default(none) shared(c6, dc6dcn, dc6dq) &
    !$omp shared(nat, atoms, dispm, zetavec, zetadcn, zetadq) &
    !$omp private(iat, ati, jat, atj, dc6, dc6dcni, dc6dcnj, dc6dqi, dc6dqj, &
-   !$omp& iref, jref)
+   !$omp& iref, jref, refc6)
    do iat = 1, nat
       ati = atoms(iat)
       do jat = 1, iat
@@ -1461,7 +1461,7 @@ subroutine atm_gradient_neigh &
    real(wp), parameter :: sr = 4.0_wp/3.0_wp
 
    !$omp parallel do default(none) reduction(+:energies, gradient, sigma, dEdcn) &
-   !$omp shared(mol, neighs, neighlist, par, r4r2) &
+   !$omp shared(mol, neighs, neighlist, par, r4r2, c6, dc6dcn) &
    !$omp private(iat, ati, ij, jtr, r2ij, rij, jat, atj, ik, ktr, kat, atk, rik, &
    !$omp& r2ik, rjk, r2jk, c6ij, cij, c6ik, c6jk, cik, cjk, scale, dE, dG, dS, dCN)
    do iat = 1, len(mol)
@@ -1932,10 +1932,10 @@ subroutine atm_gradient_latp &
 
    cutoff2 = cutoff**2
 
-   !$omp parallel do default(none) reduction(+energies, gradient, sigma, dEdcn) &
-   !$omp shared(mol, r4r2, par, trans, cutoff2) &
+   !$omp parallel do default(none) reduction(+:energies, gradient, sigma, dEdcn) &
+   !$omp shared(mol, r4r2, par, trans, cutoff2, c6, dc6dcn) &
    !$omp private(iat, ati, jat, atj, kat, atk, c6ij, cij, c6ik, c6jk, cik, cjk, &
-   !$omp& itr, rij, r2ij, ktr, rik, r2ik, rjk, r2jk, scale, dE, dG, dS, dCN)
+   !$omp& rij, r2ij, ktr, rik, r2ik, rjk, r2jk, scale, dE, dG, dS, dCN)
    do iat = 1, len(mol)
       ati = mol%at(iat)
       do jat = 1, iat
diff --git a/src/xtb/hamiltonian.f90 b/src/xtb/hamiltonian.f90
index 4f451a6..bc4c0c0 100644
--- a/src/xtb/hamiltonian.f90
+++ b/src/xtb/hamiltonian.f90
@@ -293,9 +293,10 @@ subroutine build_SDQH0(nShell, hData, nat, at, nbf, nao, xyz, trans, selfEnergy,
 
    ! diagonal elements
    !$omp parallel do default(none) reduction(+:H0, sint, dpint, qpint) &
-   !$omp shared(nat, xyz, at, nShell, hData, saoshell, selfEnergy, caoshell) &
+   !$omp shared(nat, xyz, at, nShell, hData, saoshell, selfEnergy, caoshell, &
+   !$omp& point, intcut, nprim, primcount, alp, cont) &
    !$omp private(iat, ra, izp, ish, ishtyp, iao, i, ii, icao, naoi, iptyp, &
-   !$omp& jah, jshtyp, jcao, ss, dd, qq, k, tmp, jao, jj)
+   !$omp& jsh, jshtyp, jcao, ss, dd, qq, k, tmp, jao, jj, naoj, jptyp)
    do iat = 1, nat
       ra = xyz(:, iat)
       izp = at(iat)
@@ -538,7 +539,7 @@ subroutine build_dSDQH0(nShell, hData, selfEnergy, dSEdcn, intcut, nat, nao, nbf
 
    ! diagonal contributions
    !$omp parallel do default(none) reduction(+:dhdcn) &
-   !$omp shared(nat, at, nshell, hData, saoshell) &
+   !$omp shared(nat, at, nshell, hData, saoshell, P, dSEdcn) &
    !$omp private(iat, izp, ish, ishtyp, iao, i, Pij)
    do iat = 1, nat
       izp = at(iat)
@@ -624,7 +625,7 @@ subroutine build_dSDQH0_noreset(nShell, hData, selfEnergy, dSEdcn, intcut, &
    point = 0.0_wp
    ! call timing(t1,t3)
    !$OMP PARALLEL DO default(none) &
-   !$omp shared(nat, at, xyz, trans, nShell, hData, selfEnergy, dSEdcn, P, Pew, &
+   !$omp shared(nat, at, xyz, nShell, hData, selfEnergy, dSEdcn, P, Pew, &
    !$omp& H0, S, ves, vs, vd, vq, &
    !$omp& intcut, nprim, primcount, caoshell, saoshell, alp, cont) &
    !$omp PRIVATE(iat,jat,ixyz,izp,ci,rij2,jzp,ish,ishtyp,ij, &
@@ -731,7 +732,7 @@ subroutine build_dSDQH0_noreset(nShell, hData, selfEnergy, dSEdcn, intcut, &
 
    ! diagonal contributions
    !$omp parallel do default(none) reduction(+:dhdcn) &
-   !$omp shared(nat, at, nshell, hData, saoshell) &
+   !$omp shared(nat, at, nshell, hData, saoshell, P, dSEdcn) &
    !$omp private(iat, izp, ish, ishtyp, iao, i, Pij)
    do iat = 1, nat
       izp = at(iat)
